version: '3.4'
services:
  app: &app
    build:
      context: .
      dockerfile: ./Dockerfile
      # target: dev
      # arg:
        # - TZ="Europe/Zurich"
        # - RAILS_ENV="production"
        # - BUNDLER_VERSION="2.2.17"
        # - BUNDLE_WITHOUT=development:metrics:test
        # - BUILD_PACKAGES="git libicu-dev libpq-dev nodejs npm"
        # - BUILD_SCRIPT="npm install -g npm && \
        #                 npm install -g yarn && \
        #                 yarn set version 1.22.10"
        # - POST_BUILD_SCRIPT=bin/rails assets:precompile
        # - RUN_PACKAGES="clamav \
        #                 clamav-daemon \
        #                 git imagemagick \
        #                 libicu-dev libpq5 \
        #                 nodejs \
        #                 poppler-utils"
    volumes:
      - .:/usr/src/app
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - db-init:/db-init
    depends_on:
      - pg
      - cache
      - mail
      - worker
    environment:
      - PORT=3000
      - RAILS_DB_HOST=pg
      - RAILS_ENV=development
      - RAILS_MEMCACHED_HOST=cache
      - RAILS_MAIL_DELIVERY_CONFIG=address:mail,port:1025
    ports:
      - 3000:3000
    command: bundle exec puma
    entrypoint: ./.docker/entrypoint.sh
    tty: true
    stdin_open: true
  pg:
    image: postgres
    environment:
      - POSTGRES_USER=decidim_biel
      - POSTGRES_PASSWORD=7UhEIvi9wFymva3
      - POSTGRES_DB=decidim_biel_development
    ports:
      - 5432:5432
    volumes:
      - pg-data:/var/lib/postgresql/data
  cache:
    image: memcached:1.5-alpine
    command: [ memcached, -l, '0.0.0.0', -p, '11211' ]

  adminer:
    image: adminer
    ports:
      - '8080:8080'
    links:
      - pg:db
    depends_on:
      - pg

  mail:
    image: schickling/mailcatcher:latest
    ports:
      - '1080:1080'
  worker:
    <<: *app
    depends_on: []
    ports: []
    entrypoint: []
    command: [ rake, 'jobs:work' ]
  ruby:
    build:
      context: .
      dockerfile: ./.docker/Dockerfile
      target: dev
    command: []

volumes:
  node_modules: {}
  bundle: {}
  pg-data: {}
  db-init: {}
